<%=
  render(Primer::Beta::BorderBox.new(classes: 'StorageListCss')) do |component|
    component.with_header(color: :subtle, classes: 'StorageListCss-header') do
      I18n.t('storages.count', count: storages.size)
    end

    storages.map do |storage|
      component.with_row(scheme: :default, color: :subtle, id: storage_row_css_id(storage), classes: 'StorageListCss-row') do
        grid_layout do |grid|
          grid.with_area(:Name, tag: :div, color: :default, classes: 'StorageListCss-name') do
            unless storage.configured?
              concat_component(Primer::Beta::Octicon, icon: :'alert-fill', size: :small, color: :severe, classes: 'mr-2')
            end

            concat storage.name
          end

          grid.with_area(:Time, tag: :div) do
            I18n.t('activity.item.created_on', datetime: helpers.format_time(storage.created_at)).capitalize
          end

          grid.with_area(:Creator, tag: :div) do
            render(Users::AvatarComponent.new(user: storage.creator, size: :mini, link: false, show_name: true))
          end
          grid.with_area(:Type, Primer::Beta::Truncate, classes: 'StorageListCss-type') { storage.short_provider_type }
          grid.with_area(:Host, Primer::Beta::Truncate, classes: 'StorageListCss-host') { storage.host }
        end
      end
    end
  end
%>
